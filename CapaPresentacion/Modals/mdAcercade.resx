<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aQq01EQAAAAASUVORK5CYII=
</value>
  </data>
</root>